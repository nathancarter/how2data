install.packages("fpp2")
library(fpp2)
time.series.vector=c(162.1, 256.9, 151.15,118.76, 100.71, 83.97, 99.4, 103.64, 71.59, 94.92, 78.73, 182.85, 165.23, 197.94, 146.8, 127.17, 112.4, 70.35, 72.98, 82.8, 70.33, 76.13, 75.54, 130.32)
str(time.series.vector)
time.series=ts(time.series.vector,start = c(1990,1),frequency = 12)
str(time.series)
time.series
time.series.vector
autoplot(time.series)
autoplot(time.series)+xlab("Years")
autoplot(time.series)+xlab("Years")+ylab("Electricity bill amounts (in USD)")
autoplot(time.series)+xlab("Years")+ylab("Electricity bill amounts (in USD)")+ggtitle("Tim")
autoplot(time.series)+xlab("Years")+ylab("Electricity bill amounts (in USD)")+ggtitle("Time series plot showing money spent on electricity every month over two years")
austourists
str(austourists)
autoplot(austourists)
departures
departures
autoplot(departures)
house1=c(162.1, 256.9, 151.15,118.76, 100.71, 83.97, 99.4, 103.64, 71.59, 94.92, 78.73, 182.85)
house2=c(165.23, 197.94, 146.8, 127.17, 112.4, 70.35, 72.98, 82.8, 70.33, 76.13, 75.54, 130.32)
combinedTimeSeries=ts(cbind(house1,house2),start = c(1990,1),frequency = 12)
combinedTimeSeries
autoplot(combinedTimeSeries)
autoplot(combinedTimeSeries)+geom_smooth()+ylab("Electricity bills")+
ggtitle("Monthly electricity bill amounts comparison over a year")
autoplot(combinedTimeSeries)+geom_smooth() #--This "geom_smooth" (stands for smooth geometry) bit helps us pass smooth estimated trend lines (along with their interval estimates) calculated through LOWESS smoothing. Get rid of this piece in case you want a simpler comparison#
+ylab("Electricity bills")+
ggtitle("Monthly electricity bill amounts comparison over a year")
autoplot(combinedTimeSeries)+geom_smooth() +ylab("Electricity bills")+
ggtitle("Monthly electricity bill amounts comparison over a year")
#--This "geom_smooth" (stands for smooth geometry) bit helps us pass smooth estimated trend lines (along with their interval estimates) calculated through LOWESS smoothing. Get rid of this piece in case you want a simpler comparison--#
str(departures)
autoplot(departures)
autoplot(departures)
autoplot(departures,facets = T)
departures[,1]
departures
permanent=ts(departures[,4][72:length(departures[,4])], start = c(1982,1),frequency = 12)
permanent
permanent=ts(departures[,1], start = c(1976,1),frequency = 12)
reslong=ts(departures[,2], start = c(1976,1),frequency = 12)
vislong=ts(departures[,3], start = c(1976,1),frequency = 12)
resshort=ts(departures[,4][72:length(departures[,4])], start = c(1982,1),frequency = 12)
visshort=ts(departures[,5], start = c(1976,1),frequency = 12)
autoplot(cbind(permanent,reslong,vislong,resshort,visshort))
autoplot(cbind(permanent,reslong,vislong,resshort,visshort))+ylab("Departures")+ggtitle("Departures from Australia, separated by resident categories, non-constant origin")
#--Check how the blue graph starts late---#
library(fpp2)
time.series.vector=c(162.1, 256.9, 151.15,118.76, 100.71, 83.97, 99.4, 103.64, 71.59, 94.92, 78.73, 182.85, 165.23, 197.94, 146.8, 127.17, 112.4, 70.35, 72.98, 82.8, 70.33, 76.13, 75.54, 130.32)
time.series.vector #--Printing out the long chain of numbers--#
str(time.series.vector)
time.series=ts(time.series.vector,start = c(1990,1),frequency = 12)
time.series #--Notice how the arrangement looks different, organised by years and months--#
str(time.series) #--Check how it's now recognised as a time series object---#
autoplot(time.series)+xlab("Years")+ylab("Electricity bill amounts (in USD)")+ggtitle("Time series plot showing money spent on electricity every month over two years")
austourists
str(austourists) #--check that it is already a time series object--#
autoplot(austourists) #--so going straight to the plotting without the "ts" bit--#
house1=c(162.1, 256.9, 151.15,118.76, 100.71, 83.97, 99.4, 103.64, 71.59, 94.92, 78.73, 182.85)
house2=c(165.23, 197.94, 146.8, 127.17, 112.4, 70.35, 72.98, 82.8, 70.33, 76.13, 75.54, 130.32)
combinedTimeSeries=ts(cbind(house1,house2),start = c(1990,1),frequency = 12) #--"cbind" (which stands for "column binding") helps create a grand time series object---#
combinedTimeSeries #--notice how they are now arranged in a matrix-type format--#
autoplot(combinedTimeSeries)+geom_smooth() +ylab("Electricity bills")+
ggtitle("Monthly electricity bill amounts comparison over a year")
departures
str(departures) #--five different time series, great for comparisons---#
autoplot(departures)
autoplot(departures,facets = T) #--notice how the y-axes have changed!!--#
permanent=ts(departures[,1], start = c(1976,1),frequency = 12)
reslong=ts(departures[,2], start = c(1976,1),frequency = 12)
vislong=ts(departures[,3], start = c(1976,1),frequency = 12)
resshort=ts(departures[,4][72:length(departures[,4])], start = c(1982,1),frequency = 12) #--notice how the origin is different now---#
visshort=ts(departures[,5], start = c(1976,1),frequency = 12)
autoplot(cbind(permanent,reslong,vislong,resshort,visshort))+ylab("Departures")+ggtitle("Departures from Australia, separated by resident categories, non-constant origin")
library(quantmod)
getSymbols("FB")
head(getSymbols("FB",auto.assign = F))
tail(getSymbols("FB",auto.assign = F))
chartSeries(FB)
autoplot(dailyReturn(FB))
getSymbols("FB")
head(getSymbols("FB",auto.assign = F)) #--the first few days---#
tail(getSymbols("FB",auto.assign = F)) #--the last few days---#
chartSeries(FB) #--notice that "FB" is automatically detected as a time series, without us #              #--having to define it to be so through "ts", "start", "frequency", etc..-#
autoplot(dailyReturn(FB)) #-the same advantage carries over to the "autoplot" function too-#
departures
departures[,1]
dec.permanent=decompose(departures[,1],type=c("additive"))
dec.permanent
head(departures)
1-var(dec.permanent$random,na.rm=TRUE)/var((dec.permanent$trend+dec.permanent$random),na.rm=TRUE)
dec.permanent=decompose(departures[,1],type=c("additive"))
dec.reslong=decompose(departures[,2],type=c("additive"))
dec.vislong=decompose(departures[,3],type=c("additive"))
dec.resshort=decompose(departures[,4],type=c("additive"))
dec.visshort=decompose(departures[,5],type=c("additive"))
1-var(dec.permanent$random,na.rm=TRUE)/var((dec.permanent$trend+dec.permanent$random),na.rm=TRUE)
1-var(dec.reslong$random,na.rm=TRUE)/var((dec.reslong$trend+dec.reslong$random),na.rm=TRUE)
1-var(dec.vislong$random,na.rm=TRUE)/var((dec.vislong$trend+dec.vislong$random),na.rm=TRUE)
1-var(dec.resshort$random,na.rm=TRUE)/var((dec.resshort$trend+dec.resshort$random),na.rm=TRUE)
1-var(dec.visshort$random,na.rm=TRUE)/var((dec.visshort$trend+dec.visshort$random),na.rm=TRUE)
1-var(dec.permanent$random,na.rm=TRUE)/var((dec.permanent$seasonal+dec.permanent$random),na.rm=TRUE)
1-var(dec.reslong$random,na.rm=TRUE)/var((dec.reslong$seasonal+dec.reslong$random),na.rm=TRUE)
1-var(dec.vislong$random,na.rm=TRUE)/var((dec.vislong$seasonal+dec.vislong$random),na.rm=TRUE)
1-var(dec.resshort$random,na.rm=TRUE)/var((dec.resshort$seasonal+dec.resshort$random),na.rm=TRUE)
1-var(dec.visshort$random,na.rm=TRUE)/var((dec.visshort$seasonal+dec.visshort$random),na.rm=TRUE)
